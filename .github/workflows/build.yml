name: Build APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Получение кода из репозитория
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Очистка места на диске
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk
          sudo rm -rf /opt/hostedtoolcache/Ruby
          sudo rm -rf /opt/hostedtoolcache/go
          df -h

      # 3. Установка Python 3.9
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # 4. Кэширование python-for-android
      - name: Cache python-for-android
        uses: actions/cache@v4
        with:
          path: ~/.buildozer/android/platform/python-for-android
          key: python-for-android-${{ hashFiles('buildozer.spec') }}
          restore-keys: python-for-android-

      # 5. Кэширование Android SDK
      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: ~/.buildozer/android/platform/android-sdk
          key: android-sdk-${{ hashFiles('buildozer.spec') }}
          restore-keys: android-sdk-

      # 6. Установка зависимостей
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git zip unzip openjdk-17-jdk python3-pip autoconf automake libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo6 cmake libffi-dev libssl-dev libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev
          python -m pip install --upgrade pip
          pip install --user buildozer cython==0.29.36 python-for-android
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV
          pkg-config --modversion openssl || echo "OpenSSL not found via pkg-config"
          ls -la /usr/lib/x86_64-linux-gnu/pkgconfig/openssl.pc || echo "openssl.pc not found"
          dpkg -l | grep libssl-dev || echo "libssl-dev not installed"

      # 7. Очистка конфликтующих версий NDK и старых кэшей
      - name: Clean up other NDK versions and caches
        run: |
          sudo rm -rf /usr/local/lib/android/sdk/ndk/*
          sudo rm -rf ~/.buildozer/android/platform/android-ndk-*
          sudo rm -rf ~/.buildozer/cache

      # 8. Проверка сетевой доступности
      - name: Check network connectivity
        run: |
          ping -c 4 github.com || echo "Cannot reach github.com"
          ping -c 4 dl.google.com || echo "Cannot reach dl.google.com"
          curl -I https://github.com/kivy/python-for-android || echo "Cannot access python-for-android repository"
          nslookup github.com || echo "DNS resolution failed for github.com"

      # 9. Клонирование python-for-android с повторными попытками
      - name: Clone python-for-android
        run: |
          if [ ! -d ~/.buildozer/android/platform/python-for-android ]; then
            mkdir -p ~/.buildozer/android/platform
            for i in {1..5}; do
              git clone https://github.com/kivy/python-for-android.git ~/.buildozer/android/platform/python-for-android && break
              echo "Retry $i failed, waiting 15 seconds..."
              sleep 15
            done
          fi
          ls -la ~/.buildozer/android/platform/python-for-android || echo "Failed to clone python-for-android"

      # 10. Создание директории для Buildozer
      - name: Setup Buildozer directories
        run: |
          mkdir -p ~/.buildozer/android/platform
          BUILDOZER_ANDROID_SDK=~/.buildozer/android/platform/android-sdk
          echo "BUILDOZER_ANDROID_SDK=$BUILDOZER_ANDROID_SDK" >> $GITHUB_ENV

      # 11. Установка Android SDK
      - name: Install Android SDK
        run: |
          if [ ! -d ~/.buildozer/android/platform/android-sdk ]; then
            cd ~/.buildozer/android/platform
            for i in {1..5}; do
              wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O commandlinetools.zip && break
              echo "Retry $i failed, waiting 15 seconds..."
              sleep 15
            done
            unzip commandlinetools.zip
            mkdir -p android-sdk/cmdline-tools
            mv cmdline-tools android-sdk/cmdline-tools/latest
          fi
          ANDROID_HOME=$BUILDOZER_ANDROID_SDK
          echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
          echo "PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools" >> $GITHUB_ENV

      # 12. Принятие всех лицензий
      - name: Accept all licenses
        run: |
          mkdir -p $BUILDOZER_ANDROID_SDK/licenses
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $BUILDOZER_ANDROID_SDK/licenses/android-sdk-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $BUILDOZER_ANDROID_SDK/licenses/android-sdk-license
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> $BUILDOZER_ANDROID_SDK/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > $BUILDOZER_ANDROID_SDK/licenses/android-sdk-preview-license
          echo "79120722343a6f314e0719f863036c702b0e6b2a" > $BUILDOZER_ANDROID_SDK/licenses/android-ndk-license
          echo "c5d028512b2ee471fdc0df39c09d954d50b6e2b2" >> $BUILDOZER_ANDROID_SDK/licenses/android-ndk-license

      # 13. Установка SDK компонентов
      - name: Install SDK components
        run: |
          $BUILDOZER_ANDROID_SDK/cmdline-tools/latest/bin/sdkmanager --sdk_root=$BUILDOZER_ANDROID_SDK \
            "platforms;android-33" \
            "build-tools;34.0.0" \
            "ndk;25.2.9519653" \
            "platform-tools" \
            "tools"
          mkdir -p $BUILDOZER_ANDROID_SDK/tools/bin
          ln -sf $BUILDOZER_ANDROID_SDK/cmdline-tools/latest/bin/sdkmanager $BUILDOZER_ANDROID_SDK/tools/bin/sdkmanager
          ln -sf $BUILDOZER_ANDROID_SDK/cmdline-tools/latest/bin/avdmanager $BUILDOZER_ANDROID_SDK/tools/bin/avdmanager
          mkdir -p $BUILDOZER_ANDROID_SDK/tools/lib
          if [ -d "$BUILDOZER_ANDROID_SDK/cmdline-tools/latest/lib" ]; then
            ln -sf $BUILDOZER_ANDROID_SDK/cmdline-tools/latest/lib/* $BUILDOZER_ANDROID_SDK/tools/lib/
          fi
          find $BUILDOZER_ANDROID_SDK/build-tools -name "aidl" -type f || echo "AIDL not found"
          ls -la $BUILDOZER_ANDROID_SDK/ndk/25.2.9519653 || echo "NDK 25.2.9519653 not found"

      # 14. Настройка Buildozer
      - name: Configure Buildozer
        run: |
          if [ ! -f buildozer.spec ]; then
            buildozer init
            cat > buildozer.spec <<EOL
[app]
title = Notepad
package.name = notepad
package.domain = org.my
source.dir = .
source.include_exts = py,png,jpg,kv,atlas,db
source.include_patterns = icon.png
icon.filename = icon.png
requirements = python3,kivy==2.3.0
android.permissions = INTERNET,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE
android.api = 33
android.minapi = 21
android.ndk = 25.2.9519653
android.sdk_path = ~/.buildozer/android/platform/android-sdk
android.ndk_path = ~/.buildozer/android/platform/android-sdk/ndk/25.2.9519653
android.archs = arm64-v8a
log_level = 2
android.gradle_version = 8.1
android.gradle_plugin_version = 8.1.0
android.ant_path = /usr/bin
android.skip_update = True
p4a.branch = master
EOL
          fi
          cat buildozer.spec

      # 15. Диагностика
      - name: Debug info
        run: |
          echo "=== Environment ==="
          echo "BUILDOZER_ANDROID_SDK: $BUILDOZER_ANDROID_SDK"
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
          echo "=== Buildozer version ==="
          buildozer --version
          echo "=== python-for-android version ==="
          p4a --version || echo "python-for-android not installed correctly"
          echo "=== OpenSSL check ==="
          pkg-config --modversion openssl || echo "OpenSSL not found via pkg-config"
          ls -la /usr/lib/x86_64-linux-gnu/pkgconfig/openssl.pc || echo "openssl.pc not found"
          dpkg -l | grep libssl-dev || echo "libssl-dev not installed"
          echo "=== SDK structure ==="
          ls -la $BUILDOZER_ANDROID_SDK/
          echo "=== Build tools content ==="
          if [ -d "$BUILDOZER_ANDROID_SDK/build-tools" ]; then
            ls -la $BUILDOZER_ANDROID_SDK/build-tools/
            echo "=== AIDL check ==="
            find $BUILDOZER_ANDROID_SDK/build-tools -name "aidl" -type f 2>/dev/null || echo "AIDL not found"
          fi
          echo "=== NDK check ==="
          ls -la $BUILDOZER_ANDROID_SDK/ndk/25.2.9519653 || echo "NDK 25.2.9519653 not found"
          echo "=== python-for-android check ==="
          ls -la ~/.buildozer/android/platform/python-for-android || echo "python-for-android directory not found"
          echo "=== Build directory check ==="
          ls -la .buildozer/android/platform/build-arm64-v8a || echo "Build directory not found"
          echo "=== Bin directory check ==="
          ls -la bin/ || echo "Bin directory not found"
          echo "=== Repository structure ==="
          ls -la . || echo "Repository directory empty"
          echo "=== Final buildozer.spec ==="
          cat buildozer.spec
          echo "=== Disk usage ==="
          du -sh ~/.buildozer || echo "Buildozer directory not found"

      # 16. Компиляция APK
      - name: Build APK
        timeout-minutes: 90
        run: |
          export ANDROID_HOME=$BUILDOZER_ANDROID_SDK
          export ANDROID_SDK_ROOT=$BUILDOZER_ANDROID_SDK
          export PATH=$PATH:$BUILDOZER_ANDROID_SDK/cmdline-tools/latest/bin:$BUILDOZER_ANDROID_SDK/platform-tools
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
          export TERM=dumb
          echo "Starting APK build with:"
          echo "ANDROID_HOME: $ANDROID_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          for i in {1..5}; do
            buildozer -v android debug --arch=arm64-v8a && break
            echo "Build retry $i failed, waiting 15 seconds..."
            sleep 15
          done
        env:
          ANDROID_HOME: ${{ env.BUILDOZER_ANDROID_SDK }}
          ANDROID_TOP: ${{ env.BUILDOZER_ANDROID_SDK }}

      # 17. Загрузка APK
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: ./bin/*.apk
          if-no-files-found: warn
